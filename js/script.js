'use strict';

let a = document.querySelector('button');

alert('Push the button ' + a.textContent);

class First {
   constructor() {

   }
   hello() {
      console.log(`Привет, я метод родителя!`);
   }
}

class Second extends First {
   hello() {
      super.hello();
      console.log(`А я наследуемый метод!`);
   }
}

const sec = new Second();

a.addEventListener('click', sec.hello);




/*Метод Фейнмана:
Было тяжело,интересно, но все же:
самое важное, что я вынес в данный момент-это то, что любую задачу любой профессии, для упрощения и быстроты, нужно решать с помощью алгоритмов(они бывают разные), правильность и быстрота выполнения задачи зависят сугубо от профессионалаизма и опыта разработчика данного алгоритма. Любая задача разбивается на подзадачи(и так до самых примитивных задач).Затем решаются все примитивные подзадачи, собираются в один "документ" и связываются между собой для окончательного завершения выполнения.
   Научился работать с GIT  -программой контроля версий, для удобства работы в команде.(команды init, add,commit,checkout,merge,push,pull).
   Обновил знания по функциональному JS - типы данных, циклы, операторы , функции, циклы, замыкания, работа с объектами, массивами, датами, функциями.
   Получил фундаментальные знания по ООП. (инкапсуляция,наследование, полиморфизм).
   Научился отличать let от var, определять назначение use strict.
   Научился работать с объектами, прототипами, конструкторами, классами, событиями , This, стрелочными функциями,LocalStorage & Cookies, связывать элементы DOM  JS с HTML и CSS.*/